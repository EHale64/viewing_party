---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<THIS_IS_SECRET>&include_adult=false&language=en-US&page=1&query=Rush
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Oct 2020 13:44:50 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 23241b9c368643949e3bb1a1ba4e97c3.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 9QWKM7bKcsFOSLSgrGZtiOimptupMKW6FUYYZ_ApcmKJqrkAzfXLSA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJ0b3RhbF9yZXN1bHRzIjoyMTAsInRvdGFsX3BhZ2VzIjoxMSwicmVzdWx0cyI6W3sicG9wdWxhcml0eSI6MjIuMTE2LCJpZCI6OTY3MjEsInZpZGVvIjpmYWxzZSwidm90ZV9jb3VudCI6NDkxNywidm90ZV9hdmVyYWdlIjo3LjcsInRpdGxlIjoiUnVzaCIsInJlbGVhc2VfZGF0ZSI6IjIwMTMtMDktMDIiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSdXNoIiwiZ2VucmVfaWRzIjpbMTgsMjhdLCJiYWNrZHJvcF9wYXRoIjoiXC9EM2VEVU5FekpQQkRHM1RDSmNSN1J5UmdUQS5qcGciLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiQSBiaW9ncmFwaGljYWwgZHJhbWEgY2VudGVyZWQgb24gdGhlIHJpdmFscnkgYmV0d2VlbiBGb3JtdWxhIDEgZHJpdmVycyBKYW1lcyBIdW50IGFuZCBOaWtpIExhdWRhIGR1cmluZyB0aGUgMTk3NiBGb3JtdWxhIE9uZSBtb3Rvci1yYWNpbmcgc2Vhc29uLiIsInBvc3Rlcl9wYXRoIjoiXC91V2NNZ3hPM3AzcXdWRlV4c1J6MUhiVHpHdlQuanBnIn0seyJwb3B1bGFyaXR5IjozMC4xNTUsInZvdGVfY291bnQiOjI5NjgsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL3dlN3dPTFZGZ3hoekx6VXQwcU5lNTB4ZElRWi5qcGciLCJpZCI6MjEwOSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC80bk1FSTJBTmUzWUIyMnUxOHhiSFhaT0xWSXkuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUnVzaCBIb3VyIiwiZ2VucmVfaWRzIjpbMjgsMzUsODBdLCJ0aXRsZSI6IlJ1c2ggSG91ciIsInZvdGVfYXZlcmFnZSI6Ni45LCJvdmVydmlldyI6IldoZW4gSG9uZyBLb25nIEluc3BlY3RvciBMZWUgaXMgc3VtbW9uZWQgdG8gTG9zIEFuZ2VsZXMgdG8gaW52ZXN0aWdhdGUgYSBraWRuYXBwaW5nLCB0aGUgRkJJIGRvZXNuJ3Qgd2FudCBhbnkgb3V0c2lkZSBoZWxwIGFuZCBhc3NpZ25zIGNvY2t5IExBUEQgRGV0ZWN0aXZlIEphbWVzIENhcnRlciB0byBkaXN0cmFjdCBMZWUgZnJvbSB0aGUgY2FzZS4gTm90IGNvbnRlbnQgdG8gd2F0Y2ggdGhlIGFjdGlvbiBmcm9tIHRoZSBzaWRlbGluZXMsIExlZSBhbmQgQ2FydGVyIGZvcm0gYW4gdW5saWtlbHkgcGFydG5lcnNoaXAgYW5kIGludmVzdGlnYXRlIHRoZSBjYXNlIHRoZW1zZWx2ZXMuIiwicmVsZWFzZV9kYXRlIjoiMTk5OC0wOS0xOCJ9LHsicG9wdWxhcml0eSI6MzMuMjI4LCJ2b3RlX2NvdW50IjoxOTc5LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9pWHNiQUlaZXpJMGdoMGRuT25CYmVGdUczQU8uanBnIiwiaWQiOjUxNzQsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ilwvcm5XU003cVdXZEFjMkx2TmgzbHJ2c0VSejdjLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlJ1c2ggSG91ciAzIiwiZ2VucmVfaWRzIjpbMjgsMzUsODBdLCJ0aXRsZSI6IlJ1c2ggSG91ciAzIiwidm90ZV9hdmVyYWdlIjo2LjMsIm92ZXJ2aWV3IjoiQWZ0ZXIgYW4gYXR0ZW1wdGVkIGFzc2Fzc2luYXRpb24gb24gQW1iYXNzYWRvciBIYW4sIEluc3BlY3RvciBMZWUgYW5kIERldGVjdGl2ZSBDYXJ0ZXIgYXJlIGJhY2sgaW4gYWN0aW9uIGFzIHRoZXkgaGVhZCB0byBQYXJpcyB0byBwcm90ZWN0IGEgRnJlbmNoIHdvbWFuIHdpdGgga25vd2xlZGdlIG9mIHRoZSBUcmlhZHMnIHNlY3JldCBsZWFkZXJzLiBMZWUgYWxzbyBob2xkcyBzZWNyZXQgbWVldGluZ3Mgd2l0aCBhIFVuaXRlZCBOYXRpb25zIGF1dGhvcml0eSwgYnV0IGhpcyBwZXJzb25hbCBzdHJ1Z2dsZXMgd2l0aCBhIENoaW5lc2UgY3JpbWluYWwgbWFzdGVybWluZCBuYW1lZCBLZW5qaSwgd2hpY2ggcmV2ZWFscyB0aGF0IGl0J3MgTGVlJ3MgbG9uZy1sb3N0Li4uYnJvdGhlci4iLCJyZWxlYXNlX2RhdGUiOiIyMDA3LTA4LTA4In0seyJwb3B1bGFyaXR5IjozMC40MTcsInZvdGVfY291bnQiOjI1ODQsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL25tbGxzZXZXeng3WHRybEFSczNoSEpuNVBmLmpwZyIsImlkIjo1MTc1LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL2NIYzVNaFp3Z2xOVnBwaGFBMVg3MFhPRmw2RC5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSdXNoIEhvdXIgMiIsImdlbnJlX2lkcyI6WzI4LDM1LDgwXSwidGl0bGUiOiJSdXNoIEhvdXIgMiIsInZvdGVfYXZlcmFnZSI6Ni42LCJvdmVydmlldyI6Ikl0J3MgdmFjYXRpb24gdGltZSBmb3IgQ2FydGVyIGFzIGhlIGZpbmRzIGhpbXNlbGYgYWxvbmdzaWRlIExlZSBpbiBIb25nIEtvbmcgd2lzaGluZyBmb3IgbW9yZSBleGNpdGVtZW50LiBXaGlsZSBDYXJ0ZXIgd2FudHMgdG8gcGFydHkgYW5kIG1lZXQgdGhlIGxhZGllcywgTGVlIGlzIG91dCB0byB0cmFjayBkb3duIGEgVHJpYWQgZ2FuZyBsb3JkIHdobyBtYXkgYmUgcmVzcG9uc2libGUgZm9yIGtpbGxpbmcgdHdvIG1lbiBhdCB0aGUgQW1lcmljYW4gRW1iYXNzeS4gVGhpbmdzIGdldCBjb21wbGljYXRlZCBhcyB0aGUgcGFpciBzdHVtYmxlIG9udG8gYSBjb3VudGVyZmVpdGluZyBwbG90LiBUaGUgYm95cyBhcmUgc29vbiB1cCB0byB0aGVpciBuZWNrcyBpbiBmaXN0IGZpZ2h0cyBhbmQgbGlmZS10aHJlYXRlbmluZyBzaXR1YXRpb25zLiBBIHRyaXAgYmFjayB0byB0aGUgVS5TLiBtYXkgcHJvdmlkZSB0aGUgYW5zd2VycyBhYm91dCB0aGUgYm9tYmluZywgdGhlIGNvdW50ZXJmZWl0aW5nLCBhbmQgdGhlIHRydWUgYWxsZWdpYW5jZSBvZiBzZXh5IGN1c3RvbXMgYWdlbnQgSXNhYmVsbGEuIiwicmVsZWFzZV9kYXRlIjoiMjAwMS0wOC0wMyJ9LHsicG9wdWxhcml0eSI6MTkuMDE4LCJpZCI6NTEyMywidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50IjoyMDA4LCJ2b3RlX2F2ZXJhZ2UiOjcuMywidGl0bGUiOiJBdWd1c3QgUnVzaCIsInJlbGVhc2VfZGF0ZSI6IjIwMDctMTEtMjEiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBdWd1c3QgUnVzaCIsImdlbnJlX2lkcyI6WzEwNzUxLDE4LDEwNDAyXSwiYmFja2Ryb3BfcGF0aCI6Ilwvd3A5ZkRGd00xbEc4NWlQNExrRDdYbUk5YWllLmpwZyIsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJBbiBvcnBoYW5lZCBtdXNpY2FsIHByb2RpZ3kgdXNlcyBoaXMgZ2lmdCBhcyBhIGNsdWUgdG8gZmluZGluZyBoaXMgYmlydGggcGFyZW50cy4iLCJwb3N0ZXJfcGF0aCI6Ilwvb0E2WmVJQ1BJTmlTNll0RDVXWmVCYUdWbXVULmpwZyJ9LHsicG9wdWxhcml0eSI6MTkuMTE4LCJ2b3RlX2NvdW50IjoxMDYsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL3NscmN3dVEyRmViN200bVB2V2l4SllxVDNOYS5qcGciLCJpZCI6NjM5NjA5LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcLzFOU2pqN0FuQWJBVVhIQUp2M2ExNHlDM2g0RS5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJIb2xpZGF5IFJ1c2giLCJnZW5yZV9pZHMiOlszNSwxOCwxMDc0OV0sInRpdGxlIjoiSG9saWRheSBSdXNoIiwidm90ZV9hdmVyYWdlIjo1LjYsIm92ZXJ2aWV3IjoiQWZ0ZXIgaGlzIHN1ZGRlbiBmaXJpbmcsIGEgcG9wdWxhciByYWRpbyBESiBtb3ZlcyBpbiB3aXRoIGhpcyBhdW50LCBicmluZ2luZyBhbG9uZyBoaXMgZm91ciBzcG9pbGVkIGNoaWxkcmVuLCBhbmQgYSBwbGFuIHRvIHJldHVybiB0byB0aGUgYWlyd2F2ZXMuIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0xMS0yOCJ9LHsicG9wdWxhcml0eSI6MTQuNjg3LCJ2b3RlX2NvdW50IjoxNDg2LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9wV09PWjRMVzFWeGdGMzdsTjJNRjM4bXNVZ2IuanBnIiwiaWQiOjQ5NTI2LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL2lWNzNKYkVSZVhvNEFDQkphbjJVUEpGVVhZaC5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJQcmVtaXVtIFJ1c2giLCJnZW5yZV9pZHMiOlsyOCw4MCw1M10sInRpdGxlIjoiUHJlbWl1bSBSdXNoIiwidm90ZV9hdmVyYWdlIjo2LjMsIm92ZXJ2aWV3IjoiSW4gTWFuaGF0dGFuLCBhIGJpa2UgbWVzc2VuZ2VyIHBpY2tzIHVwIGFuIGVudmVsb3BlIHRoYXQgYXR0cmFjdHMgdGhlIGludGVyZXN0IG9mIGEgZGlydHkgY29wLCB3aG8gcHVyc3VlcyB0aGUgY3ljbGlzdCB0aHJvdWdob3V0IHRoZSBjaXR5LiIsInJlbGVhc2VfZGF0ZSI6IjIwMTItMDgtMjQifSx7InBvcHVsYXJpdHkiOjYuNjkyLCJ2b3RlX2NvdW50Ijo3NCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvMW56OFJpNHp1Tm5aaFpGcTVldThqaFpzTjFJLmpwZyIsImlkIjoyMDI4OSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC81OWppczBMZm1zT2wxQzNSazhoZ2dZUmtTU3guanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUnVzaCIsImdlbnJlX2lkcyI6WzgwLDE4XSwidGl0bGUiOiJSdXNoIiwidm90ZV9hdmVyYWdlIjo2LjgsIm92ZXJ2aWV3IjoiVW5kZXJjb3ZlciBjb3AgSmltIFJheW5vciAoSmFzb24gUGF0cmljKSBpcyBhIHNlYXNvbmVkIHZldGVyYW4uIEhpcyBwYXJ0bmVyLCBLcmlzdGVuIENhdGVzIChKZW5uaWZlciBKYXNvbiBMZWlnaCksIGlzIGxhY2tpbmcgaW4gZXhwZXJpZW5jZSwgYnV0IGhlIHRoaW5rcyBzaGUncyB0b3VnaCBlbm91Z2ggdG8gd29yayBoaXMgbmV4dCBjYXNlIHdpdGggaGltOiBhIGRlZXAgY292ZXIgYXNzaWdubWVudCB0byBicmluZyBkb3duIHRoZSBub3RvcmlvdXNseSBoYXJkLXRvLWNhcHR1cmUgZHJ1ZyBsb3JkIEdhaW5lcyAoR3JlZ2cgQWxsbWFuKS4gV2hpbGUgdGhlaXIgcmVsYXRpb25zaGlwIHR1cm5zIHJvbWFudGljIGR1cmluZyB0aGUgYXNzaWdubWVudCwgdGhleSBhbHNvIHR1cm4gaW50byBqdW5raWVzLCBhbmQgd2lsbCBoYXZlIHRvIGJhdHRsZSB0aGVpciBvd24gYWRkaWN0aW9ucyBpZiB0aGV5IHdhbnQgdG8gYnJpbmcgZG93biBHYWluZXMgb25jZSBhbmQgZm9yIGFsbC4iLCJyZWxlYXNlX2RhdGUiOiIxOTkxLTEyLTIyIn0seyJwb3B1bGFyaXR5IjoxMC4zNDUsImlkIjo5NjIsInZpZGVvIjpmYWxzZSwidm90ZV9jb3VudCI6OTE4LCJ2b3RlX2F2ZXJhZ2UiOjgsInRpdGxlIjoiVGhlIEdvbGQgUnVzaCIsInJlbGVhc2VfZGF0ZSI6IjE5MjUtMDctMTIiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgR29sZCBSdXNoIiwiZ2VucmVfaWRzIjpbMTIsMzUsMThdLCJiYWNrZHJvcF9wYXRoIjoiXC9qSXFwNXhYWTJhdzFreG5CUHlDWGtLUUJPSjMuanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IkEgbG9uZSBwcm9zcGVjdG9yIHZlbnR1cmVzIGludG8gQWxhc2thIGxvb2tpbmcgZm9yIGdvbGQuIEhlIGdldHMgbWl4ZWQgdXAgd2l0aCBzb21lIGJ1cmx5IGNoYXJhY3RlcnMgYW5kIGZhbGxzIGluIGxvdmUgd2l0aCB0aGUgYmVhdXRpZnVsIEdlb3JnaWEuIEhlIHRyaWVzIHRvIHdpbiBoZXIgaGVhcnQgd2l0aCBoaXMgc2luZ3VsYXIgY2hhcm0uIiwicG9zdGVyX3BhdGgiOiJcL2VRUkZvMXF3UlJFWXdqNDdZb2UxUGlzZ09sZS5qcGcifSx7InBvcHVsYXJpdHkiOjkuOTQ3LCJ2b3RlX2NvdW50IjozMDUsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL3RjUmFNaldvRjhLN2gxTHFPSDdGT09MUlEzZS5qcGciLCJpZCI6MTk2OCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9wQXI1d3QxNWZyZ3o0QWRBU1NheDZOSVluVmguanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRm9vbHMgUnVzaCBJbiIsImdlbnJlX2lkcyI6WzM1LDE4LDEwNzQ5XSwidGl0bGUiOiJGb29scyBSdXNoIEluIiwidm90ZV9hdmVyYWdlIjo2LjIsIm92ZXJ2aWV3IjoiQWZ0ZXIgYSBvbmUgbmlnaHQgc3RhbmQgd2l0aCBBbGV4LCBJc2FiZWwgcmVhbGl6ZXMgdGhhdCBzaGUgaXMgcHJlZ25hbnQgYW5kIHRoZXkgZGVjaWRlIHRvIGdldCBtYXJyaWVkLiBIb3dldmVyLCBhbG9uZyB3aXRoIHRoZSBtYXJyaWFnZSBjb21lcyBjb21wcm9taXNlIG9mIG9uZSdzIG93biBjdWx0dXJhbCB0cmFkaXRpb25zLiIsInJlbGVhc2VfZGF0ZSI6IjE5OTctMDItMTQifSx7InBvcHVsYXJpdHkiOjYuNTM5LCJpZCI6MTcxMTgsInZpZGVvIjpmYWxzZSwidm90ZV9jb3VudCI6NCwidm90ZV9hdmVyYWdlIjo2LjgsInRpdGxlIjoiUnVzaDogUjMwIiwicmVsZWFzZV9kYXRlIjoiMjAwNS0xMS0yOCIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlJ1c2g6IFIzMCIsImdlbnJlX2lkcyI6WzEwNDAyXSwiYmFja2Ryb3BfcGF0aCI6IlwvMmpzQjhzZzJuQWw2a1FjVk1wU2s1M3RieG4uanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IlIzMCBjYXB0dXJlcyB0aGUgYmFuZCdzICQyMS1taWxsaW9uIGdyb3NzaW5nLCBzZWxsLW91dCAzMHRoIEFubml2ZXJzYXJ5IFdvcmxkIFRvdXIgYW5kIHdhcyBmaWxtZWQgd2l0aCAxNCBoaS1kZWZpbml0aW9uIGNhbWVyYXMgaW4gMTZ4OSB3aWRlc2NyZWVuIGZvcm1hdCBhdCB0aGUgRmVzdGhhbGxlLCBGcmFua2Z1cnQgR2VybWFueSBvbiBTZXB0ZW1iZXIgMjQsIDIwMDQuICBUaGUgc2V0IGxpc3Qgc3BhbnMgdGhlIGJhbmQncyBkaXZlcnNlIDMwLXllYXIgY2FyZWVyLCBhbmQgaW5jbHVkZXMgZmFuIGZhdm9yaXRlcyBcIlhhbmFkdSxcIiBcIlRoZSBTcGlyaXQgb2YgUmFkaW8sXCIgXCJXb3JraW5nIE1hbixcIiBcIlRvbSBTYXd5ZXIsXCIgXCJTdWJkaXZpc2lvbnMsXCIgXCJFYXJ0aHNoaW5lLFwiIFwiMjExMixcIiBcIkxpbWVsaWdodCxcIiBcIkJldHdlZW4gdGhlIFdoZWVscyxcIiB3aGljaCBoYXNuJ3QgYmVlbiBwZXJmb3JtZWQgbGl2ZSBpbiAyMCB5ZWFycyBhcyB3ZWxsIGFzIHRyYWNrcyBmcm9tIDIwMDQncyBjb3ZlcnMgRVAgRmVlZGJhY2ssIGluY2x1ZGluZyBcIlN1bW1lcnRpbWUgQmx1ZXNcIiBhbmQgXCJDcm9zc3JvYWRzLlwiIE1vc3Qgb2YgYWxsIGVpZ2h0ZWVuIHN0dWRpbyBhbGJ1bXMgYXJlIHdlbGwgcmVwcmVzZW50ZWQgdGhyb3VnaCBhIG5vbi1zdG9wIGVuZXJnZXRpYyBzZXQgb2YgMjIgZWxlY3RyaWZ5aW5nIHNvbmdzLiIsInBvc3Rlcl9wYXRoIjoiXC95Q21sRVdUb2FPcTBocHJ5cmJtbjJINGdCMTcuanBnIn0seyJwb3B1bGFyaXR5Ijo4LjU3Mywidm90ZV9jb3VudCI6MywidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvYXVFYzFScEd6emlaODdKaWZhTkVvUFE5R2tpLmpwZyIsImlkIjo3MjgzMDAsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiT2RkIE1hbiBSdXNoIiwiZ2VucmVfaWRzIjpbMThdLCJ0aXRsZSI6Ik9kZCBNYW4gUnVzaCIsInZvdGVfYXZlcmFnZSI6Mi43LCJvdmVydmlldyI6IldoZW4gSGFydmFyZCBob2NrZXnigJlzIEJvYmJ5IFNhbmRlcnMgbGFuZHMgaW4gU3dlZGVu4oCZcyBtaW5vciBsZWFndWVzLCBoaXMgcmVsYXRpb25zaGlwIHdpdGggdGhlIGdpcmwgYXQgdGhlIGxvY2FsIG1hcmtldCBmb3JjZXMgaGltIHRvIGNvbmZyb250IHRoZSByZWFsaXR5IG9mIGhpcyBjaGlsZGhvb2QgTkhMIGRyZWFtIGJlZm9yZSB0aGUgaG9ja2V5IGdvZHMgaW50ZXJ2ZW5lLiIsInJlbGVhc2VfZGF0ZSI6IjIwMjAtMDktMDEifSx7InBvcHVsYXJpdHkiOjQuODk3LCJ2b3RlX2NvdW50IjozNCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwveHEzWU52em05Q0dlRm91eUtzOFQ1aU43RUVHLmpwZyIsImlkIjoyMjYxNywiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9sY1RLQjdyUUVxVmhaUFk4WTBQRjZ5VGR6a2IuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRGlubmVyIFJ1c2giLCJnZW5yZV9pZHMiOlsyOCwxOCw1M10sInRpdGxlIjoiRGlubmVyIFJ1c2giLCJ2b3RlX2F2ZXJhZ2UiOjcuNCwib3ZlcnZpZXciOiJJcyBpdCBqdXN0IGFub3RoZXIgZXZlbmluZyBhdCB0aGUgaHVnZWx5IHBvcHVsYXIgSXRhbGlhbiByZXN0YXVyYW50IG9mIHByb3ByaWV0b3IgYW5kIGJvb2ttYWtlciBMb3VpcyBDcm9wYSBpbiBOZXcgWW9yaz8gQW55dGhpbmcgYnV0IGFzIHRvbmlnaHQncyBndWVzdHMgaW5jbHVkZTsgYSBsb2NhbCBwb2xpY2UgZGV0ZWN0aXZlIGFuZCBoaXMgd2lmZSBzcGVjaWFsbHkgaW52aXRlZCBieSB0aGUgb3duZXI7IG9uIHRoZSBiYWxjb255IHJpdmFsIGJvb2ttYWtlciBnYW5nc3RlcnMgZnJvbSBRdWVlbnMgd2hvIHdhbnQgdG8gYmVjb21lIHBhcnRuZXJzIGluIHRoZSByZXN0YXVyYW50OyBpbiB0aGUgY29ybmVyIHJlbm93bmVkIGZvb2QgY3JpdGljICd0aGUgZm9vZCBueW1waCcgaXMgaGVyIHVzdWFsIGRlbWFuZGluZyBzZWxmOyBhbmQgYXQgdGhlIGJhciwgc2VlbWluZ2x5IHVubm90aWNlZCwgaXMgS2VuLiBBcyB0aGUgZXZlbmluZyBjb250aW51ZXMgZW50ZXIgRHVuY2FuLCBpbnZldGVyYXRlIGdhbWJsZXIgYW5kIHNvdXMtY2hlZiBvbi10aGUtbGluZSBpbiB0aGUgZnJlbmV0aWMga2l0Y2hlbiBkb3duc3RhaXJzLCB3aG8gYWN0cyBhcyB0aGUgY2F0YWx5c3QgdGhhdCBjYXVzZXMgdGhlIGV2ZW5pbmcgdG8gZHJhdyB0byBpdHMgaW5ldml0YWJsZSwgZXhwbG9zaXZlLCBkZWFkbHkgY29uY2x1c2lvbi4iLCJyZWxlYXNlX2RhdGUiOiIyMDAwLTA5LTAxIn0seyJwb3B1bGFyaXR5Ijo0LjI4Mywidm90ZV9jb3VudCI6MTYsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL29RcVB2RTBYb1BGcGtnWXpPNU9NMUlxa3cycC5qcGciLCJpZCI6NDEyMzYxLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL3VyYnZ4U290OENXNGpPcDB0RWtjTnFGUjV1SS5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImZyIiwib3JpZ2luYWxfdGl0bGUiOiJOaXRybyBSdXNoIiwiZ2VucmVfaWRzIjpbMjhdLCJ0aXRsZSI6Ik5pdHJvIFJ1c2giLCJ2b3RlX2F2ZXJhZ2UiOjUuOSwib3ZlcnZpZXciOiJJbiB0aGUgZm9sbG93IHVwIHRvIHRoZSBib3gtb2ZmaWNlIGhpdCBOaXRybyAoMjAwNyksIHdlIGNhdGNoIHVwIHdpdGggTWF4IGFzIGhlIHNlcnZlcyB0aW1lIGZvciB0aGUgcm9sZSBoZSBwbGF5ZWQgaW4gdGhlIGRlYXRoIG9mIGEgcG9saWNlIG9mZmljZXIuIFdoZW4gdGhlIGZpbG0gYmVnaW5zLCBNYXggbGVhcm5zIHRoYXQgaGlzIDE3LXllYXItb2xkIHNvbiBUaGVvIGhhcyBqdXN0IGJlZW4gcmVjcnVpdGVkIGJ5IGEgY3JpbWluYWwgb3JnYW5pemF0aW9uLiBEZXNwZXJhdGUgdG8gZ2V0IGhpbSBvdXQgb2YgdGhpcyBzaXR1YXRpb24sIE1heCBlc2NhcGVzIGZyb20gcHJpc29uLiBIZSBkaXNjb3ZlcnMgdGhhdCBUaGVvIGFuZCBoaXMgYmVzdCBmcmllbmQgQ2hhcmx5IGhhdmUgZmFsbGVuIHVuZGVyIHRoZSBjb250cm9sIG9mIERhcGhuZSwgYW4gYWxsdXJpbmcgZmVtbWUgZmF0YWxlLCB3aG8gaXMgdGFraW5nIGFkdmFudGFnZSBvZiB0aGUgdGVlbnPigJkgZXhwZXJ0IGNvbXB1dGVyIHNraWxscyB0byBwbGFuIGEgYm9sZCBhbmQgcmlza3kgYnVyZ2xhcnkuIFF1aWNrbHkgdW5kZXJzdGFuZGluZyBoZeKAmWxsIGJlIHVuYWJsZSB0byBwZXJzdWFkZSBoaXMgc29uIHRvIHdhbGsgYXdheSBmcm9tIGl0IGFsbCwgTWF4IGpvaW5zIHRoZSB0ZWFtIGluIG9yZGVyIHRvIHByb3RlY3QgdGhlbS4gSGlzIGRyaXZpbmcgc2tpbGxzIGFuZCBoaXMgYXRobGV0aWMgcHJvd2VzcyB3aWxsIHByb3ZlIHRvIGJlIGludmFsdWFibGUgYXNzZXRzIGluIHRoaXMgYWN0aW9uLXBhY2tlZCBzZXF1ZWwuIiwicmVsZWFzZV9kYXRlIjoiMjAxNi0wOC0zMSJ9LHsicG9wdWxhcml0eSI6OC42MDUsInZvdGVfY291bnQiOjQ1LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC81c3UzeFIzazBkb0ptVVlJVms4TzVRblhueG4uanBnIiwiaWQiOjQxMTIwLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL2VVWkhoZ3d2MHp3UjNMUGFkeGVCTmZoN1ZDdy5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSdXNoOiBCZXlvbmQgdGhlIExpZ2h0ZWQgU3RhZ2UiLCJnZW5yZV9pZHMiOls5OSwxMDQwMl0sInRpdGxlIjoiUnVzaDogQmV5b25kIHRoZSBMaWdodGVkIFN0YWdlIiwidm90ZV9hdmVyYWdlIjo3LjksIm92ZXJ2aWV3IjoiQW4gaW4tZGVwdGggbG9vayBhdCB0aGUgQ2FuYWRpYW4gcm9jayBiYW5kIFJ1c2gsIGNocm9uaWNsaW5nIHRoZSBiYW5kJ3MgbXVzaWNhbCBldm9sdXRpb24gZnJvbSB0aGVpciBwcm9ncmVzc2l2ZSByb2NrIHNvdW5kIG9mIHRoZSAnNzBzIHRvIHRoZWlyIGN1cnJlbnQgaGVhdnkgcm9jayBzdHlsZSIsInJlbGVhc2VfZGF0ZSI6IjIwMTAtMDYtMjkifSx7InBvcHVsYXJpdHkiOjIuODAxLCJ2b3RlX2NvdW50Ijo4LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC85dk1zZktNWEY0ZUx4aWNRR05YaFJST1hGUEYuanBnIiwiaWQiOjMwNjU4LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL2dYTHhKSTN6T1FpR2tSTlV5bFdsemFYUkRrdy5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJSdXNoOiBSdXNoIEluIFJpbyIsImdlbnJlX2lkcyI6WzEwNDAyXSwidGl0bGUiOiJSdXNoOiBSdXNoIEluIFJpbyIsInZvdGVfYXZlcmFnZSI6Ny45LCJvdmVydmlldyI6IkZpcnN0IGNvbmNlcnQgRFZEIGV2ZXIgZnJvbSBsZWdlbmRhcnkgcm9jayB0cmlvIFJ1c2guIERvdWJsZS1EVkQgc2V0LCBjb250YWluaW5nIDI4IFJ1c2ggc29uZ3MuICBSZWNvcmRlZCBhbmQgZmlsbWVkIGF0IE1hcmFjYW5hIFN0YWRpdW0gaW4gUmlvIGRlIEphbmVpcm8sIEJyYXppbCwgb24gdGhlIGZpbmFsIG5pZ2h0IG9mIHRoZSBiYW5kJ3MgMjAwMiB0b3VyLCBpbiBmcm9udCBvZiA0MCwwMDAgZmFucy4gIEJvbnVzIGZlYXR1cmVzIGluY2x1ZGUgdGhlIHRvdXIgZG9jdW1lbnRhcnkgXCJUaGUgQm95cyBJbiBCcmF6aWwsXCIgYSBmaWxtIGJ5IEFuZHJldyBNYWNOYXVnaHRhbiwgbXVsdGktYW5nbGUgdmlld2luZyBvcHRpb25zIGZvciBjZXJ0YWluIHNvbmdzLCBhbmQgYmVoaW5kLXRoZS1zY2VuZXMgZm9vdGFnZS4iLCJyZWxlYXNlX2RhdGUiOiIyMDAzLTEwLTIxIn0seyJwb3B1bGFyaXR5Ijo0LjQ0Niwidm90ZV9jb3VudCI6MSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvQWRTWWRBOHl6SlhNbHF6TUd3SGh0aTQ0WUp5LmpwZyIsImlkIjo2OTM1NTEsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvOHFtMnI0WU9kZVJtMHVoWlZPcG1yVVVCRUVOLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkdyZWVuIFJ1c2giLCJnZW5yZV9pZHMiOlsyOCwxOCw1M10sInRpdGxlIjoiR3JlZW4gUnVzaCIsInZvdGVfYXZlcmFnZSI6Nywib3ZlcnZpZXciOiJBIGNhbm5hYmlzIGZhcm1lciBhbmQgaGlzIHByZWduYW50IGxvdmVyIGZpZ2h0IGZvciB0aGVpciBsaXZlcyB3aGVuIHJ1dGhsZXNzIGNyaW1pbmFscyBpbnZhZGUgdGhlaXIgcHJvcGVydHkuIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wOS0yMyJ9LHsicG9wdWxhcml0eSI6NC4zMywidm90ZV9jb3VudCI6MywidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvZ0NsNm5xRE0wZEtlOWk1TjV3ZE5kZmpEY1VnLmpwZyIsImlkIjozMTA2NiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJDaHJpc3RtYXMgUnVzaCIsImdlbnJlX2lkcyI6WzI4XSwidGl0bGUiOiJDaHJpc3RtYXMgUnVzaCIsInZvdGVfYXZlcmFnZSI6NSwib3ZlcnZpZXciOiJJbiB0aGUgc2Vhc29uIG9mIGdpdmluZywgdGhlIGRlcGFydG1lbnQgdG9vayBoaXMgYmFkZ2UuIENyaW1pbmFscyB0b29rIGhpcyB3aWZlLiBOb3csIG9uZSBjb3AgaXMgdGFraW5nIG1hdHRlcnMgaW50byBoaXMgb3duIGhhbmRzIiwicmVsZWFzZV9kYXRlIjoiMjAwMi0wMS0wMSJ9LHsicG9wdWxhcml0eSI6NC4xNjEsInZvdGVfY291bnQiOjcsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL3g3R01zc0Zkcmw2U1g2R1BvS1E5ZlRiOVlkOS5qcGciLCJpZCI6MzkwMzY0LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL3RWcjRYek1xYXlOWXRJbUgzdm9QQ3AxQkVwTC5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaW1lIFJ1c2giLCJnZW5yZV9pZHMiOlsyOF0sInRpdGxlIjoiVGltZSBSdXNoIiwidm90ZV9hdmVyYWdlIjo0LjIsIm92ZXJ2aWV3IjoiQWxleCwgc3R1Y2sgaW4gYSByZXBlYXRpbmcgbG9vcCBvZiB0aW1lLCBtdXN0IG5hdmlnYXRlIGhpcyB3YXkgdGhyb3VnaCB0aGUgYnVzdGxpbmcgc3RyZWV0cyBvZiBCYW5na29rIHdpdGggbXlzdGVyaW91cyBtZW4gb24gaGlzIGhlZWxzIHRyeWluZyB0byBraWxsIGhpbS4gUGFya291ciwgbWFydGlhbCBhcnRzLCBzaG9vdCBvdXRzIGFuZCBjYXIgZmxpcHMgYWxsIHJlc3VsdCBpbiBoaXMgZGVhdGggdW50aWwgdGhlIGxhc3QgbG9vcC4iLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTAxLTAxIn0seyJwb3B1bGFyaXR5IjozLjk0OCwiaWQiOjM5MDU3NCwidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50Ijo4LCJ2b3RlX2F2ZXJhZ2UiOjQuNiwidGl0bGUiOiJEZWFkIFJ1c2giLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTAzLTMxIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRGVhZCBSdXNoIiwiZ2VucmVfaWRzIjpbMzUsMjddLCJiYWNrZHJvcF9wYXRoIjoiXC9sRnc0TEZ4NFZJY2FnMjN6aWNGNk81T2hxdTAuanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IkRlYWQgUnVzaCBpcyB0aGUgZW5kIG9mIHRoZSB3b3JsZCwgYXMgd2Uga25vdyBpdC4gU2VlbiB0aHJvdWdoIHRoZSBleWVzIG9mIG9uZSAgbWFuIC0gRGF2aWQgLSBBcyBoZSB0YWtlcyB1cyB0aHJvdWdoIGhpcyBqb3VybmV5OiBiZWZvcmUsIGR1cmluZyBhbmQgYWZ0ZXIgdGhlIHpvbWJpZSBvdXRicmVhay4iLCJwb3N0ZXJfcGF0aCI6IlwvNTFKTG1BUTE3MTZPanB5ZXVuWHFBNm9ZZnQ5LmpwZyJ9XX0=
  recorded_at: Thu, 15 Oct 2020 13:44:50 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<THIS_IS_SECRET>&include_adult=false&language=en-US&page=2&query=Rush
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Oct 2020 13:44:50 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 264cccdb967e804907074b11d3a83242.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - VY7QKVTlPyhNV8EBUTaImZOsi7rRRzo-88L8untvZgqRq1kYLtGVUg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Oct 2020 13:44:50 GMT
recorded_with: VCR 6.0.0
